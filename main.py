import streamlit as st
import os

from functions.ddl import create_tables, load_data, create_views
from functions.db import (
    get_genres, get_year_range, get_top_movies_by_genre_and_year,
    get_screening_times, get_monthly_sales, get_theaters_revenue,
    get_genre_ratings, get_all_genre_names_for_ratings,
    get_top_revenue_movies
)
from functions.plotly_utils import (
    plot_top_movies, plot_screening_times, plot_monthly_sales,
    plot_theaters_revenue, plot_genre_ratings, plot_top_revenue_movies
)

DATABASE_PATH = 'my.db'


def initialize_database():
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –ë–î –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ.
    –ò–Ω–∞—á–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤—Å—ë —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.
    """
    if not os.path.exists(DATABASE_PATH):
        st.info("–°–æ–∑–¥–∞—ë–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, —Ç–∞–∫ –∫–∞–∫ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω...")
        create_tables(DATABASE_PATH)
        load_data(DATABASE_PATH)
        create_views(DATABASE_PATH)
    else:
        st.info("–§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ/–∑–∞–≥—Ä—É–∑–∫—É.")


def main():
    st.set_page_config(page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –∏ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤", layout="wide")
    st.title("üé¨ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–∏–ª—å–º–∞—Ö –∏ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞—Ö")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
    initialize_database()

    # --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤ ---
    st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤")

    # === 1. –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É ===
    st.sidebar.subheader("–¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É")
    genres_list = get_genres(DATABASE_PATH)
    selected_genre = st.sidebar.selectbox("–ñ–∞–Ω—Ä", genres_list)
    
    years = get_year_range(DATABASE_PATH)
    min_year, max_year = int(years["min_year"]), int(years["max_year"])
    selected_year_range = st.sidebar.slider(
        "–ì–æ–¥—ã –≤—ã–ø—É—Å–∫–∞ (–¢–æ–ø —Ñ–∏–ª—å–º–æ–≤)",
        min_value=min_year,
        max_value=max_year,
        value=(min_year, max_year)
    )

    top_n_movies = st.sidebar.slider("–¢–æ–ø-N —Ñ–∏–ª—å–º–æ–≤", 5, 20, 10)

    # === 2. –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–µ–∞–Ω—Å–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ ===
    st.sidebar.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–µ–∞–Ω—Å–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏")
    hour_range = st.sidebar.slider("–î–∏–∞–ø–∞–∑–æ–Ω —á–∞—Å–æ–≤", 0, 23, (0, 23))

    # === 3. –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –î–∏–Ω–∞–º–∏–∫–∏ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º ===
    st.sidebar.subheader("–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º")
    month_range = st.sidebar.slider("–î–∏–∞–ø–∞–∑–æ–Ω –º–µ—Å—è—Ü–µ–≤", 1, 12, (1, 12))

    # === 4. –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –°—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –ø–æ –≤—ã—Ä—É—á–∫–µ ===
    st.sidebar.subheader("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤")
    top_n_theaters = st.sidebar.slider("–¢–æ–ø-N –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤", 1, 20, 5)

    # === 5. –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –°—Ä–∞–≤–Ω–µ–Ω–∏—è –∂–∞–Ω—Ä–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º ===
    st.sidebar.subheader("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∂–∞–Ω—Ä–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º")
    all_genre_names = get_all_genre_names_for_ratings(DATABASE_PATH)
    selected_genre_names = st.sidebar.multiselect(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä—ã (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, —á—Ç–æ–±—ã –≤–∑—è—Ç—å –≤—Å–µ)",
        all_genre_names
    )

    # === 6. –§–∏–ª—å—Ç—Ä—ã –¥–ª—è –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—ã—Ä—É—á–∫–µ ===
    st.sidebar.subheader("–¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—ã—Ä—É—á–∫–µ")
    # –ü–µ—Ä–µ–ø–æ–ª—å–∑—É–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –ª–µ—Ç (min_year, max_year) ‚Äî –Ω–æ —Å–¥–µ–ª–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–ª–∞–π–¥–µ—Ä,
    # –ø–æ—Ç–æ–º—É —á—Ç–æ, –≤–æ–∑–º–æ–∂–Ω–æ, —Ö–æ—Ç–∏–º –¥—Ä—É–≥–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞.
    selected_year_range_revenue = st.sidebar.slider(
        "–ì–æ–¥—ã –≤—ã–ø—É—Å–∫–∞ (–¢–æ–ø –ø–æ –≤—ã—Ä—É—á–∫–µ)",
        min_value=min_year,
        max_value=max_year,
        value=(min_year, max_year)
    )
    top_n_revenue_movies = st.sidebar.slider("–¢–æ–ø-N –ø–æ –≤—ã—Ä—É—á–∫–µ", 5, 20, 10)

    # --- –û–°–ù–û–í–ù–û–ï –û–ö–ù–û: –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –≤—Å–µ –≥—Ä–∞—Ñ–∏–∫–∏ —Å —É—á—ë—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤ ---

    # 1. –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
    st.subheader(f"–¢–æ–ø-{top_n_movies} —Ñ–∏–ª—å–º–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É –≤ –∂–∞–Ω—Ä–µ ¬´{selected_genre}¬ª ({selected_year_range[0]}‚Äì{selected_year_range[1]})")
    df_top_movies = get_top_movies_by_genre_and_year(
        genre=selected_genre,
        year_range=selected_year_range,
        top_n=top_n_movies,
        database_path=DATABASE_PATH
    )
    fig1 = plot_top_movies(df_top_movies)
    st.plotly_chart(fig1, use_container_width=True)

    # 2. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–µ–∞–Ω—Å–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
    st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–µ–∞–Ω—Å–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫")
    df_screening = get_screening_times(DATABASE_PATH, hour_range=hour_range)
    fig2 = plot_screening_times(df_screening)
    st.plotly_chart(fig2, use_container_width=True)

    # 3. –î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º
    st.subheader("–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º")
    df_monthly = get_monthly_sales(DATABASE_PATH, month_range=month_range)
    fig3 = plot_monthly_sales(df_monthly)
    st.plotly_chart(fig3, use_container_width=True)

    # 4. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –ø–æ –≤—ã—Ä—É—á–∫–µ
    st.subheader("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –ø–æ –≤—ã—Ä—É—á–∫–µ")
    df_theaters = get_theaters_revenue(DATABASE_PATH, top_n=top_n_theaters)
    fig4 = plot_theaters_revenue(df_theaters)
    st.plotly_chart(fig4, use_container_width=True)

    # 5. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∂–∞–Ω—Ä–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º
    st.subheader("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∂–∞–Ω—Ä–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º")
    df_genres = get_genre_ratings(DATABASE_PATH)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∂–∞–Ω—Ä—ã, —Ñ–∏–ª—å—Ç—Ä—É–µ–º
    if selected_genre_names:
        df_genres = df_genres[df_genres['genre_name'].isin(selected_genre_names)]

    fig5 = plot_genre_ratings(df_genres)
    st.plotly_chart(fig5, use_container_width=True)

    # 6. –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—ã—Ä—É—á–∫–µ
    st.subheader(f"–¢–æ–ø-{top_n_revenue_movies} —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—ã—Ä—É—á–∫–µ ({selected_year_range_revenue[0]}‚Äì{selected_year_range_revenue[1]})")
    df_top_revenue = get_top_revenue_movies(
        year_range=selected_year_range_revenue,
        top_n=top_n_revenue_movies,
        database_path=DATABASE_PATH
    )
    fig6 = plot_top_revenue_movies(df_top_revenue)
    st.plotly_chart(fig6, use_container_width=True)


if __name__ == "__main__":
    main()
